# This is the Docker Compose file for the Trancendos Ecosystem.
# It defines the services that make up the application and how they should be run.
version: '3.8'

# This section defines the services that make up the application.
services:
  # The frontend service is responsible for the user interface of the application.
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=http://backend-java:8080
    depends_on:
      - backend-java
      - backend-python
    networks:
      - trancendos-network

  # The Java backend service is responsible for the core business logic of the application.
  backend-java:
    build:
      context: ./backend/java
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=production
      - DATABASE_URL=jdbc:postgresql://postgres:5432/trancendos
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    networks:
      - trancendos-network

  # The Python backend service is responsible for the AI/ML features of the application.
  backend-python:
    build:
      context: ./backend/python
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - DATABASE_URL=postgresql://postgres:5432/trancendos_ai
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    networks:
      - trancendos-network

  # The PostgreSQL service is the primary database for the application.
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=trancendos
      - POSTGRES_USER=trancendos
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - trancendos-network

  # The Redis service is used for caching and message brokering.
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - trancendos-network

  # The Prometheus service is used for collecting metrics from the application.
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - trancendos-network

  # The Grafana service is used for visualizing the metrics collected by Prometheus.
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    networks:
      - trancendos-network

  # The Nginx service is used as a reverse proxy for the application.
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/ssl/certs
    depends_on:
      - frontend
      - backend-java
      - backend-python
    networks:
      - trancendos-network

# This section defines the volumes that are used by the services.
volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

# This section defines the networks that are used by the services.
networks:
  trancendos-network:
    driver: bridge